profiles$min.cycle <-NULL
profiles <- profiles[grepl("HEALTH-|e-HEALTH",profiles$Sector,ignore.case = T),]
View(profiles)
# Drop grants and policy loans
profiles <- profiles[profiles$`Operation Type`=="Loan Operation",]
profiles <- profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 54 projects of health & e-health check
names(profiles)
#profiles <-profiles[-c(2,3,6,7,10,15,20:21,23)] # delete non-important columns
profiles<-profiles[c(1,4,5,8,9,14,17,22)]
print(profiles)
View(profiles)
profiles_c<-profiles[c(2,3,6:8)]
file <- "/input/impact.csv" #Tab: General Development Objectives
impact <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) #, encoding="UTF-8") # From tableau
g.ind <-unique(impact[c(2,4,8,9,11,14)])
rm(impact)
g.ind<-merge(profiles, g.ind, by="Project Number", all.x = T)
g.ind$Long.op.name <-paste0(g.ind$`Project Number`," - ",g.ind$`Operation Name`)
g.ind$indicator_unit <-paste0(g.ind$Indicators," - ",g.ind$`Unit of Measure`)
g.ind$`General Development Objective` <-paste0("+",g.ind$`General Development Objective`)
g.ind$indicator_unit <-paste("+",g.ind$indicator_unit)
View(g.ind)
names(g.ind)
names(g.ind)[names(g.ind)=="General Development Objective"]<-"objectives"
names(g.ind)[names(g.ind)=="indicator_unit"]<-"objectives_indicators_units"
names(g.ind)[names(g.ind)=="Indicators"]<-"objectives_indicators"
names(g.ind)[names(g.ind)=="Unit of Measure"]<-"objectives_units"
x <-g.ind[c(1,12)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
x$min.cycle <-ave(x$`Baseline Year`,x$`Project Number`,FUN = min)
x <-x[x$`Baseline Year`==x$min.cycle,]
x$min.cycle <-NULL
x <-x[!duplicated(x),]
summary(x$`Baseline Year`) #freq min baseline year
g.ind_u <-merge(x,g.ind,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
g.ind_u <-unique(g.ind_u)
g.ind <- g.ind_u
rm(g.ind_u)
View(g.ind)
file <- "/input/Outcomes.csv" #Tab: Specific Development Objectives
#outcomes <- readxl::read_excel(paste0(path,file,sep=""))
outcomes <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
View(outcomes)
names(outcomes)
s.ind <-unique(outcomes[c(2,4,10,11,13,14)])
s.ind<-merge(profiles[c(2,3,6,7,8)], s.ind[c(1:6)], by="Project Number", all.x = T)
View(s.ind)
y <-s.ind[c(1,9)]
y$`Baseline Year` <-as.integer(y$`Baseline Year`)
y$min.cycle <-ave(y$`Baseline Year`,y$`Project Number`,FUN = min)
y <-y[y$`Baseline Year`==y$min.cycle,]
y$min.cycle <-NULL
y <-y[!duplicated(y),]
summary(y$`Baseline Year`) #freq min baseline year
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
rm(s.ind)
file <- "/input/Outcomes.csv" #Tab: Specific Development Objectives
#outcomes <- readxl::read_excel(paste0(path,file,sep=""))
outcomes <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
names(outcomes)
s.ind <-unique(outcomes[c(2,4,10,11,13,14)])
s.ind<-merge(profiles[c(2,3,6,7,8)], s.ind[c(1:6)], by="Project Number", all.x = T)
s.ind_u<-unique(s.ind)
y <-s.ind[c(1,9)]
y$`Baseline Year` <-as.integer(y$`Baseline Year`)
y$min.cycle <-ave(y$`Baseline Year`,y$`Project Number`,FUN = min)
y <-y[y$`Baseline Year`==y$min.cycle,]
y$min.cycle <-NULL
y <-y[!duplicated(y),]
summary(y$`Baseline Year`) #freq min baseline year
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
s.ind$Long.op.name <-paste0(s.ind$`Project Number`," - ",s.ind$`Operation Name`)
names(s.ind)[names(s.ind)=="Specific Development objectives"]<-"outcomes"
names(s.ind)[names(s.ind)=="indicator_unit_means"]<-"outcomes_indicators_units"
names(s.ind)[names(s.ind)=="Indicator Definition"]<-"outcomes_indicators"
names(s.ind)[names(s.ind)=="Unit of Measure"]<-"outcomes_units"
names(s.ind)[names(s.ind)=="Means of Verification"]<-"outcomes_means"
names(s.ind)[names(s.ind)=="Project Number"]<-"project_number"
g.ind<-unique(g.ind)
names(s.ind)[names(s.ind)=="Project Number"]<-"project_number"
names(g.ind)[names(g.ind)=="Project Number"]<-"project_number"
s.ind_x <-merge(s.ind, g.ind[c(1,9,10)], by = c("project_number"), all.x = T)
s.uqx<-unique(s.ind_x)
s.uq<-s.uqx[!is.na(s.uqx$`outcomes`),] # eliminate operations with no information of outcomes
s.ind <- s.uqx #unique database
rm(s.uqx, s.uq)
data_r01<-s.ind[c(1,4,11,2,13,5,7:10,12)]
names(data_r01)[names(data_r01)=="Is Reformulated.y"]<-"reformulated"
View(data_r01)
openxlsx::write.xlsx(data_r01,file = paste0(path,"/data_r01.xlsx"))
write.csv(data_r01,file = paste0(path,"/data_r01.csv"), fileEncoding="UTF-8")
data_r01$health  <-grepl("salud|health|saÃºde|morbi|morta|death|disease",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$malaria <-grepl("malaria",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$covid   <-grepl("covid|coronavirus",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$covid[which(data_r01$project_number=="BL-L1036")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="EC-L1270")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="HO-L1199")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="NI-L1161")] <- TRUE #prototipo COVID
data_r01$reformulated[which(data_r01$project_number=="BH-L1053")] <- "YES" #reformulado
data_r01$reformulated[which(data_r01$project_number=="HO-L1199")] <- "YES" #reformulado
table(data_r01$project_number) #41 projects
no_covid <- data_r01[data_r01$covid=="FALSE",]
table(no_covid$project_number) #34 projects no covid
table(data_r01$reformulated, data_r01$project_number) #2 reformulated
table(data_r01$malaria, data_r01$project_number) #1 project
View(data_r01)
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profiles <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
profiles <-profiles[with(profiles,order(`Project Number`,`Cycle ID`)),]
# Leave the record of the first Convergence (oldest) cycle only
profiles$`Cycle ID`<-as.integer(profiles$`Cycle ID`)
profiles$min.cycle <-ave(profiles$`Cycle ID`,profiles$`Project Number`,FUN = min)
summary(profiles$`Cycle ID`)
profiles <- profiles[profiles$`Cycle ID`==profiles$min.cycle,]
profiles$min.cycle <-NULL
profiles <- profiles[grepl("HEALTH-|e-HEALTH",profiles$Sector,ignore.case = T),]
profiles <- profiles[profiles$`Operation Type`=="Loan Operation",]
profiles <- profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 58 projects of health & e-health check
View(profiles)
profiles$is.relevant<-profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 58 projects of health & e-health check
table(profiles$`Lending Instrument`) # 58 projects of health & e-health check
names(profiles)
profiles<-profiles[c(1,4,5,8,9,14,17,22,24)]
profiles_c<-profiles[c(2,3,6:8)]
names(profiles_c)
names(profiles)
profiles_c<-profiles[c(2,3,6:9)]
names(profiles_c)
file <- "/input/impact.csv" #Tab: General Development Objectives
impact <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) #, encoding="UTF-8") # From tableau
g.ind <-unique(impact[c(2,4,8,9,11,14)])
rm(impact)
g.ind<-merge(profiles, g.ind, by="Project Number", all.x = T)
g.ind$Long.op.name <-paste0(g.ind$`Project Number`," - ",g.ind$`Operation Name`)
g.ind$indicator_unit <-paste0(g.ind$Indicators," - ",g.ind$`Unit of Measure`)
names(g.ind)
g.ind$`General Development Objective` <-paste0("+",g.ind$`General Development Objective`)
g.ind$indicator_unit <-paste("+",g.ind$indicator_unit)
names(g.ind)
names(g.ind)[names(g.ind)=="General Development Objective"]<-"objectives"
names(g.ind)[names(g.ind)=="indicator_unit"]<-"objectives_indicators_units"
names(g.ind)[names(g.ind)=="Indicators"]<-"objectives_indicators"
names(g.ind)[names(g.ind)=="Unit of Measure"]<-"objectives_units"
x <-g.ind[c(1,13)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
x$min.cycle <-ave(x$`Baseline Year`,x$`Project Number`,FUN = min)
x <-x[x$`Baseline Year`==x$min.cycle,]
x$min.cycle <-NULL
x <-x[!duplicated(x),]
summary(x$`Baseline Year`) #freq min baseline year
g.ind_u <-merge(x,g.ind,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
g.ind_u <-unique(g.ind_u)
g.ind <- g.ind_u
rm(g.ind_u)
file <- "/input/Outcomes.csv" #Tab: Specific Development Objectives
outcomes <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
names(outcomes)
s.ind <-unique(outcomes[c(2,4,10,11,13,14)])
names(profiles)
names(s.ind)
s.ind<-merge(profiles[c(2,3,6:9)], s.ind[c(1:6)], by="Project Number", all.x = T)
s.ind_u<-unique(s.ind)
View(s.ind)
names(s.ind)
10
y <-s.ind[c(1,10)]
y$`Baseline Year` <-as.integer(y$`Baseline Year`)
y$min.cycle <-ave(y$`Baseline Year`,y$`Project Number`,FUN = min)
y <-y[y$`Baseline Year`==y$min.cycle,]
y$min.cycle <-NULL
y <-y[!duplicated(y),]
summary(y$`Baseline Year`) #freq min baseline year
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
View(s.ind_u)
rm(s.ind_u)
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
View(s.ind)
View(g.ind)
rm(g.ind)
rm(s.ind)
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profiles <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
profiles <-profiles[with(profiles,order(`Project Number`,`Cycle ID`)),]
# Leave the record of the first Convergence (oldest) cycle only
profiles$`Cycle ID`<-as.integer(profiles$`Cycle ID`)
profiles$min.cycle <-ave(profiles$`Cycle ID`,profiles$`Project Number`,FUN = min)
summary(profiles$`Cycle ID`)
profiles <- profiles[profiles$`Cycle ID`==profiles$min.cycle,]
profiles$min.cycle <-NULL
profiles <- profiles[grepl("HEALTH-|e-HEALTH",profiles$Sector,ignore.case = T),]
profiles <- profiles[profiles$`Operation Type`=="Loan Operation",]
profiles <- profiles[profiles$`Lending Instrument`=="Investment Loan",]
profiles$is.relevant<-profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 58 projects of health & e-health check
table(profiles$`Lending Instrument`) # 58 projects of health & e-health check
names(profiles)
#profiles <-profiles[-c(2,3,6,7,10,15,20:21,23)] # delete non-important columns
profiles<-profiles[c(1,4,5,8,9,14,17,22,24)]
print(profiles)
View(profiles)
profiles_c<-profiles[c(2,3,6:9)]
file <- "/input/impact.csv" #Tab: General Development Objectives
impact <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) #, encoding="UTF-8") # From tableau
g.ind <-unique(impact[c(2,4,8,9,11,14)])
rm(impact)
g.ind<-merge(profiles, g.ind, by="Project Number", all.x = T)
g.ind$Long.op.name <-paste0(g.ind$`Project Number`," - ",g.ind$`Operation Name`)
g.ind$indicator_unit <-paste0(g.ind$Indicators," - ",g.ind$`Unit of Measure`)
g.ind$`General Development Objective` <-paste0("+",g.ind$`General Development Objective`)
g.ind$indicator_unit <-paste("+",g.ind$indicator_unit)
names(g.ind)
names(g.ind)[names(g.ind)=="General Development Objective"]<-"objectives"
names(g.ind)[names(g.ind)=="indicator_unit"]<-"objectives_indicators_units"
names(g.ind)[names(g.ind)=="Indicators"]<-"objectives_indicators"
names(g.ind)[names(g.ind)=="Unit of Measure"]<-"objectives_units"
x <-g.ind[c(1,13)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
x$min.cycle <-ave(x$`Baseline Year`,x$`Project Number`,FUN = min)
x <-x[x$`Baseline Year`==x$min.cycle,]
x$min.cycle <-NULL
x <-x[!duplicated(x),]
summary(x$`Baseline Year`) #freq min baseline year
g.ind_u <-merge(x,g.ind,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
g.ind_u <-unique(g.ind_u)
g.ind <- g.ind_u
rm(g.ind_u)
file <- "/input/Outcomes.csv" #Tab: Specific Development Objectives
#outcomes <- readxl::read_excel(paste0(path,file,sep=""))
outcomes <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
names(outcomes)
s.ind <-unique(outcomes[c(2,4,10,11,13,14)])
s.ind<-merge(profiles[c(2,3,6:9)], s.ind[c(1:6)], by="Project Number", all.x = T)
s.ind_u<-unique(s.ind)
y <-s.ind[c(1,10)]
y$`Baseline Year` <-as.integer(y$`Baseline Year`)
y$min.cycle <-ave(y$`Baseline Year`,y$`Project Number`,FUN = min)
y <-y[y$`Baseline Year`==y$min.cycle,]
y$min.cycle <-NULL
y <-y[!duplicated(y),]
summary(y$`Baseline Year`) #freq min baseline year
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
View(s.ind_u)
View(s.ind_u)
names(s.ind_u)
View(s.ind_u)
table(profiles$`Operation Type`) # 58 projects of health & e-health check
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profiles <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
profiles <-profiles[with(profiles,order(`Project Number`,`Cycle ID`)),]
profiles$`Cycle ID`<-as.integer(profiles$`Cycle ID`)
profiles$min.cycle <-ave(profiles$`Cycle ID`,profiles$`Project Number`,FUN = min)
summary(profiles$`Cycle ID`)
profiles <- profiles[profiles$`Cycle ID`==profiles$min.cycle,]
profiles$min.cycle <-NULL
profiles <- profiles[grepl("HEALTH-|e-HEALTH",profiles$Sector,ignore.case = T),]
profiles <- profiles[profiles$`Operation Type`=="Loan Operation",]
profiles <- profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 58 projects of health & e-health check
table(profiles$`Lending Instrument`) # 58 projects of health & e-health check
names(profiles)
#profiles <-profiles[-c(2,3,6,7,10,15,20:21,23)] # delete non-important columns
profiles<-profiles[c(1,4,5,8,9,14,17,22,24)]
profiles_c<-profiles[c(2,3,6:9)]
file <- "/input/impact.csv" #Tab: General Development Objectives
impact <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) #, encoding="UTF-8") # From tableau
g.ind <-unique(impact[c(2,4,8,9,11,14)])
rm(impact)
g.ind<-merge(profiles, g.ind, by="Project Number", all.x = T)
g.ind$Long.op.name <-paste0(g.ind$`Project Number`," - ",g.ind$`Operation Name`)
g.ind$indicator_unit <-paste0(g.ind$Indicators," - ",g.ind$`Unit of Measure`)
g.ind$`General Development Objective` <-paste0("+",g.ind$`General Development Objective`)
g.ind$indicator_unit <-paste("+",g.ind$indicator_unit)
names(g.ind)
names(g.ind)[names(g.ind)=="General Development Objective"]<-"objectives"
names(g.ind)[names(g.ind)=="indicator_unit"]<-"objectives_indicators_units"
names(g.ind)[names(g.ind)=="Indicators"]<-"objectives_indicators"
names(g.ind)[names(g.ind)=="Unit of Measure"]<-"objectives_units"
x <-g.ind[c(1,13)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
x <-g.ind[c(1,13)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
names(g.ind)
View(g.ind)
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profiles <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
profiles <-profiles[with(profiles,order(`Project Number`,`Cycle ID`)),]
profiles$`Cycle ID`<-as.integer(profiles$`Cycle ID`)
profiles$min.cycle <-ave(profiles$`Cycle ID`,profiles$`Project Number`,FUN = min)
summary(profiles$`Cycle ID`)
profiles <- profiles[profiles$`Cycle ID`==profiles$min.cycle,]
profiles$min.cycle <-NULL
profiles <- profiles[grepl("HEALTH-|e-HEALTH",profiles$Sector,ignore.case = T),]
profiles <- profiles[profiles$`Operation Type`=="Loan Operation",]
profiles <- profiles[profiles$`Lending Instrument`=="Investment Loan",]
table(profiles$`Operation Type`) # 58 projects of health & e-health check
table(profiles$`Lending Instrument`) # 58 projects of health & e-health check
names(profiles)
profiles<-profiles[c(1,4,5,8,9,14,17,22,24)]
names(profiles)
profiles<-profiles[c(1,4,5,8,9,14,17,22)]
print(profiles)
View(profiles)
profiles_c<-profiles[c(2,3,6:9)]
names(profiles)
profiles_c<-profiles[c(2,3,6:8)]
file <- "/input/impact.csv" #Tab: General Development Objectives
impact <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) #, encoding="UTF-8") # From tableau
g.ind <-unique(impact[c(2,4,8,9,11,14)])
rm(impact)
g.ind<-merge(profiles, g.ind, by="Project Number", all.x = T)
g.ind$Long.op.name <-paste0(g.ind$`Project Number`," - ",g.ind$`Operation Name`)
g.ind$indicator_unit <-paste0(g.ind$Indicators," - ",g.ind$`Unit of Measure`)
g.ind$`General Development Objective` <-paste0("+",g.ind$`General Development Objective`)
g.ind$indicator_unit <-paste("+",g.ind$indicator_unit)
names(g.ind)
names(g.ind)[names(g.ind)=="General Development Objective"]<-"objectives"
names(g.ind)[names(g.ind)=="indicator_unit"]<-"objectives_indicators_units"
names(g.ind)[names(g.ind)=="Indicators"]<-"objectives_indicators"
names(g.ind)[names(g.ind)=="Unit of Measure"]<-"objectives_units"
names(g.ind)
x <-g.ind[c(1,12)]
x$`Baseline Year` <-as.integer(x$`Baseline Year`)
x$min.cycle <-ave(x$`Baseline Year`,x$`Project Number`,FUN = min)
x <-x[x$`Baseline Year`==x$min.cycle,]
x$min.cycle <-NULL
x <-x[!duplicated(x),]
summary(x$`Baseline Year`) #freq min baseline year
g.ind_u <-merge(x,g.ind,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
g.ind_u <-unique(g.ind_u)
g.ind <- g.ind_u
rm(g.ind_u)
file <- "/input/Outcomes.csv" #Tab: Specific Development Objectives
#outcomes <- readxl::read_excel(paste0(path,file,sep=""))
outcomes <- readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
names(outcomes)
s.ind <-unique(outcomes[c(2,4,10,11,13,14)])
names(profiles)
s.ind<-merge(profiles[c(2,3,6:8)], s.ind[c(1:6)], by="Project Number", all.x = T)
s.ind_u<-unique(s.ind)
names(s.ind)
y <-s.ind[c(1,9)]
y$`Baseline Year` <-as.integer(y$`Baseline Year`)
y$min.cycle <-ave(y$`Baseline Year`,y$`Project Number`,FUN = min)
y <-y[y$`Baseline Year`==y$min.cycle,]
y$min.cycle <-NULL
y <-y[!duplicated(y),]
summary(y$`Baseline Year`) #freq min baseline year
s.ind_u <- merge(y,s.ind_u,by =c("Project Number", "Baseline Year"),all.y = T) #Min baseline year
s.indx<-na.omit(s.ind_u)
s.ind<-unique(s.indx)
s.ind$Long.op.name <-paste0(s.ind$`Project Number`," - ",s.ind$`Operation Name`)
names(s.ind)[names(s.ind)=="Specific Development objectives"]<-"outcomes"
names(s.ind)[names(s.ind)=="indicator_unit_means"]<-"outcomes_indicators_units"
names(s.ind)[names(s.ind)=="Indicator Definition"]<-"outcomes_indicators"
names(s.ind)[names(s.ind)=="Unit of Measure"]<-"outcomes_units"
names(s.ind)[names(s.ind)=="Means of Verification"]<-"outcomes_means"
names(s.ind)[names(s.ind)=="Project Number"]<-"project_number"
View(g.ind)
View(s.ind)
g.ind<-unique(g.ind)
names(g.ind)[names(g.ind)=="Project Number"]<-"project_number"
names(g.ind)
s.ind_x <-merge(s.ind, g.ind[c(1,10)], by = c("project_number"), all.x = T)
s.uqx<-unique(s.ind_x)
s.uq<-s.uqx[!is.na(s.uqx$`outcomes`),] # eliminate operations with no information of outcomes
s.ind <- s.uqx #unique database
rm(s.uqx, s.uq)
names(s.ind)
data_r01<-s.ind[c(1,4,11,2,12,5,7:10)]
names(data_r01)[names(data_r01)=="Is Reformulated"]<-"reformulated"
openxlsx::write.xlsx(data_r01,file = paste0(path,"/data_r01.xlsx"))
write.csv(data_r01,file = paste0(path,"/data_r01.csv"), fileEncoding="UTF-8")
View(data_r01)
rm(data_r01)
data_r01<-s.ind[c(1,4,2,11,12,5,7:10)]
names(data_r01)[names(data_r01)=="Is Reformulated"]<-"reformulated"
openxlsx::write.xlsx(data_r01,file = paste0(path,"/data_r01.xlsx"))
write.csv(data_r01,file = paste0(path,"/data_r01.csv"), fileEncoding="UTF-8")
data_r01$health  <-grepl("salud|health|saÃºde|morbi|morta|death|disease",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$malaria <-grepl("malaria",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$covid   <-grepl("covid|coronavirus",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
table(data_r01$project_number,data_r01$covid)
table(data_r01$project_number,data_r01$malaria)
table(data_r01$project_number) #41 projects
View(data_r01)
data_r01$covid[which(data_r01$project_number=="BL-L1036")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="EC-L1270")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="HO-L1199")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="NI-L1161")] <- TRUE #prototipo COVID
data_r01$reformulated[which(data_r01$project_number=="BH-L1053")] <- "YES" #reformulado
data_r01$covid[which(data_r01$project_number=="BL-L1036")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="EC-L1270")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="HO-L1199")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="NI-L1161")] <- TRUE #prototipo COVID
View(data_r01)
rm(data_r01)
names(s.ind)
data_r01<-s.ind[c(1,4,2,11,12,5,7:10,6)]
names(data_r01)[names(data_r01)=="Is Reformulated"]<-"reformulated"
openxlsx::write.xlsx(data_r01,file = paste0(path,"/data_r01.xlsx"))
write.csv(data_r01,file = paste0(path,"/data_r01.csv"), fileEncoding="UTF-8")
data_r01$health  <-grepl("salud|health|saÃºde|morbi|morta|death|disease",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$malaria <-grepl("malaria",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
data_r01$covid   <-grepl("covid|coronavirus",paste(data_r01$Long.op.name,data_r01$Objective,data_r01$objectives),ignore.case = T)
table(data_r01$project_number,data_r01$covid)
table(data_r01$project_number,data_r01$malaria)
table(data_r01$project_number) #45 projects
data_r01$covid[which(data_r01$project_number=="BL-L1036")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="EC-L1270")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="HO-L1199")] <- TRUE #prototipo COVID
data_r01$covid[which(data_r01$project_number=="NI-L1161")] <- TRUE #prototipo COVID
data_r01$reformulated[which(data_r01$project_number=="BH-L1053")] <- "YES" #reformulado
data_r01$reformulated[which(data_r01$project_number=="HO-L1199")] <- "YES" #reformulado
table(data_r01$project_number) #41 projects
no_covid <- data_r01[data_r01$covid=="FALSE",]
table(no_covid$project_number) #34 projects no covid
table(data_r01$reformulated, data_r01$project_number) #2 reformulated
table(data_r01$malaria, data_r01$project_number) #1 project
data_r02 <- no_covid[no_covid$reformulated=="NO",]
data_r02 <- data_r02[data_r02$project_number!="AR-L1358",]
View(data_r02)
data_r02 <- data_r02[data_r02$project_number!="NI-L1143",]
table(data_r02$project_number, data_r02$covid) #34 projects
table(data_r02$covid, data_r02$project_number) #34 projects
file <- "/input/db_key_words3.xlsx" #Tab: Operation Profile
openxlsx::write.xlsx(data_r02,file = paste0(path,"/data_r01.xlsx"))
write.csv(data_r02,file = paste0(path,"/data_r01.csv"), fileEncoding="UTF-8")
file <- "/input/db_key_words3.xlsx" #Tab: Operation Profile
keywords <- readxl::read_excel(paste0(path,file,sep=""))
View(keywords)
file <- "/input/outcomes_updated.xlsx" #Tab: Operation Profile
keywords <- readxl::read_excel(paste0(path,file,sep=""))
names(keywords)[names(keywords)=="outcomes_original"]<-"outcomes"
names(g.ind)[names(g.ind)=="outcomes_original"]<-"outcomes"
table(keywords$)
table(keywords$project_number)
View(keywords)
table(keywords$project_number,keywords$old_outcome)
openxlsx::write.xlsx(data_r02,file = paste0(path,"/data_r02.xlsx"))
write.csv(data_r02,file = paste0(path,"/data_r02.csv"), fileEncoding="UTF-8")
View(data_r02)
names(data_r02)
data_outcomes<-unique(data_r02[c(1,7)])
View(data_outcomes)
openxlsx::write.xlsx(data_outcomes,file = paste0(path,"/data_outcomes.xlsx"))
write.csv(data_outcomes,file = paste0(path,"/data_outcomes.csv"), fileEncoding="UTF-8")
rm(keywords)
file <- "/input/outcomes_updated.xlsx" #Tab: Operation Profile
keywords <- readxl::read_excel(paste0(path,file,sep=""))
View(keywords)
rm(keywords)
file <- "/input/outcomes_updated.xlsx" #Tab: Operation Profile
keywords <- readxl::read_excel(paste0(path,file,sep=""))
names(keywords)[names(keywords)=="outcomes_original"]<-"outcomes"
names(g.ind)[names(g.ind)=="outcomes_original"]<-"outcomes"
data_revised<-merge(s.ind, keywords, by=c("project_number", "outcomes"), all.x = T)
View(data_revised)
table(data_revised$project_number)
rm(data_revised)
table(data_r02$project_number)
data_revised<-merge(data_r02, keywords, by=c("project_number", "outcomes"), all.x = T)
View(data_revised)
table(data_revised$project_number)
table(data_revised$old_outcome)
rm(data)
rm(data_revised)
data_r03<-merge(data_r02, keywords, by=c("project_number", "outcomes"), all.x = T)
data_r0x<-merge(data_r02, keywords, by=c("project_number"), all.x = T)
View(data_r0x)
data_r03<-merge(data_r02, keywords, by=c("project_number", "outcomes"), all.x = T)
data_r03x <- data_r03[data_r03$old_outcome=="1",]
View(data_r03x)
table(data_r03x$old_outcome)
View(data_r03x)
table(data_r03x$project_number, data_r03x$old_outcome)
data_r03x <- data_r03[data_r03$old_outcome=="1",]
rm(data_r03x)
data_r03x <- data_r03[data_r03$old_outcome=="1",]
table(data_r03x$project_number, data_r03x$reformulated)
rm(data_r03x)
data_r03 <- data_r03[data_r03$old_outcome=="1",]
openxlsx::write.xlsx(data_r03,file = paste0(path,"/data_r03.xlsx"))
write.csv(data_r03,file = paste0(path,"/data_r03.csv"), fileEncoding="UTF-8")
View(keywords)
rm(data_r03)
rm(data_r0x)
names(keywords)[names(keywords)=="outcomes_original"]<-"outcomes"
names(g.ind)[names(g.ind)=="outcomes_original"]<-"outcomes"
data_r03<-merge(data_r02, keywords, by=c("project_number", "outcomes"), all.x = T)
View(data_r03)
names(data_r03)
data_r03<-data_r03[-c(11)]
openxlsx::write.xlsx(data_r03,file = paste0(path,"/data_r03.xlsx"))
openxlsx::write.xlsx(data_r03,file = paste0(path,"/data_r03.xlsx"))
write.csv(data_r03,file = paste0(path,"/data_r03.csv"), fileEncoding="UTF-8")
View(profiles)
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profilesx <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
profilesx <-profiles[with(profiles,order(`Project Number`,`Cycle ID`)),]
rm(profilesx)
path <- setwd("C:/Users/ncber/OneDrive/Documentos/R-code-health-outcome-analytics")
file <- "/input/profiles.csv" #Tab: Operation Profile
profilesx <-readr::read_csv(paste0(path,file,sep=""), show_col_types = FALSE) # From tableau
View(profilesx)
